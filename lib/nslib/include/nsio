#ifndef NSIO_H
#define NSIO_H

#include <fstream>
#include <string>
// #include <stdio.h>
#include "nsvector"
#include "nsstring"

#define byte unsigned char
#define word unsigned short
#define dword unsigned int
#define qword unsigned long long

// static class for getting file data
class file {
private:
    file() {}
public:
    static string ReadAllText(string f) {
        string t;
        std::string ln;
        std::ifstream file (f.c_str());

        if (file.is_open()) {
            while (std::getline(file, ln)) {
                t += ln.c_str();
                t += "\n";
            }
            file.close();
        }
        return t;
    }

    static vector<string> ReadAllLines(string f) {
        vector<string> lns;
        std::string ln;
        std::ifstream file (f.c_str());

        if (file.is_open()) {
            while (std::getline(file, ln)) {
                lns.append((string)ln.c_str());
            }
            file.close();
        }
        return lns;
    }

    static vector<byte> ReadAllBytes(string f) {
        vector<byte> bs;
        char b;
        std::ifstream file (f.c_str());

        if (file.is_open()) {
            while (file.get(b)) {
                bs.append((byte)b);
            }
            file.close();
        }
        return bs;
    }

    static void WriteAllText(string f, string d) {}
    static void WriteAllLines(string f, vector<string> d) {}
    static void WriteAllBytes(string f, vector<byte> d) {}
};

#endif
