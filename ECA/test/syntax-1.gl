// %define WOS32_ // defined by system already

// can use inline assembly, also function macros
// strings can be multiline
int func() -> asm("
    mov eax, 1
"); // automatically returns eax

void hlt() -> asm("hlt");

struct My_struc {
    char myval : get() set(); // getters and setters

    func_ptr myfunc -> (int arg) { return arg; }; // better function pointer syntax
};

void tempFunc(const int a) {}

int main() {
    byte eight_bit_num = 0;
    char eight_bit_num_2 = 0;

    word sixteen_bit_num = 0;
    short sixteen_bit_num_2 = 0;

    dword thirtytwo_bit_num = 0;
    int thirtytwo_bit_num_2 = 0;

    float thirtytwo_bit_float = 0;

// WOS64_ isn't defined
%ifdef WOS64_
    double sixtyfour_bit_float = 0;

    qword sixtyfour_bit_num = 0;
    long sixtyfour_bit_num = 0;
%end

    int a = 0;

    tempFunc(const a); // implicit const cast (compiler basically makes new const var and copies)

    return 0;
}
