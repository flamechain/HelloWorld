#pragma once
#ifndef _XNSMEM0_
#define _XNSMEM0_

typedef unsigned long long size_t;

template<class _Ty>
    class allocator
    {
public:
	using value_type = _Ty;
	using pointer = value_type *;
	using const_pointer = const value_type * const;
	using size_type = size_t;

    allocator()
        {
        }

    ~allocator()
        {
        }

    pointer allocate(size_type _Count) const
        {
        pointer _New_array = new value_type[_Count + 1];
        return _New_array;
        }

    void deallocate(pointer _Ptr) const
        {
        delete[] _Ptr;
        }

    };

#endif
