Todo:

    * add negative indexing to string and vector classes
    * finish defining string::lower and string::upper methods
    * finish inital bug fixing of nsstring (so i can finally add features)
    * finish assembler preprocessor (include statemetents)
    * create first pass of assembler
    * add argument to CPU to specifiy file to treat as disk
    * add ECA argument to explicitly tell what the file is (G, Assembly)

    * consider having pointer manipulation in seperate class and have String and Vector use them (lots of duplicate code in the two files)
    * consider seperating private data variables into a _Traits class
    * consider seperating nslib dev doc file into 3 files, one for each part (nsio, nsvector, nsstring)
    * consider adding most string and vector pointer manipulation functions into seperate class to be used by both
    * consider putting traits of string and vector into _Traits class

Long Term:

    * finish assembler and compiler (C++ implementation)
    * create OS
        * threading (simulated, cpu is single-threaded)
        * fileio
        * basic terminal (MSDos similar)
        * assembler and compiler written in OS so you can compile programs and run them completely in OS
    * CPU
        * finish instruction set
        * finish gdt and idt architecture
